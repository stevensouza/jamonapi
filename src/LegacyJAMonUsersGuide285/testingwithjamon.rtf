{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f35\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}
{\f50\fswiss\fcharset162\fprq2 Arial Tur;}{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f386\fswiss\fcharset238\fprq2 Tahoma CE;}{\f387\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f389\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f390\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f391\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}
{\f392\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f393\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f394\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f395\fswiss\fcharset222\fprq2 Tahoma (Thai);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive 
\ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\f35\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 \ssemihidden \styrsid11405443 Balloon Text;}}{\*\listtable{\list\listtemplateid-847769048\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 }}\ls1}}{\*\rsidtbl \rsid8606377\rsid11405443}{\*\generator Microsoft Word 10.0.2627;}{\info{\title What is JAMon}{\author Ken Willis}
{\operator Preferred Customer}{\creatim\yr2006\mo10\dy22\hr20\min18}{\revtim\yr2006\mo10\dy22\hr20\min18}{\version2}{\edmins10}{\nofpages4}{\nofwords1597}{\nofchars9103}{\*\company  }{\nofcharsws10679}{\vern16437}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot11405443 \fet0\sectd 
\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\insrsid11405443 What is JAMon?}{\b\f1\fs20\insrsid11405443 
\par }{\f1\fs20\insrsid11405443 The Java Application Monitor (JAMon) is a free, simple, high performance, thread safe, Java API that allows developers to easily monitor production applications.  JAMon 2.2 requires JDK 1.4 or higher}{\f1\fs20\insrsid11405443 ;}
{\f1\fs20\insrsid11405443  however}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  previous versions of JAMon are available for JDK 1.2.
\par 
\par }{\b\f1\insrsid11405443 How can JAMon be used to test applications?}{\b\f1\fs20\insrsid11405443 
\par }{\f1\fs20\insrsid11405443 Despite the fact that JAMon was developed primarily to monitor applications in production, it can also be used during an applications testing/Q&A phase.  The following are some of the ways JAMon can be used in the testing phase:

\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
To ensure the application meets its performance requirements
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
To ensure the application meets its scalability requirements
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
To detect if the application has any errors or throws unwanted exceptions
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 To ensure that th
at all parts of the application were properly tested (coverage)
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
To ensure that the application is properly working in production as part of post-production testing
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
To gather information from production and start a feedback loop between development, test and production that will improve the application
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par These topics will be elaborated on in subsequent sections.
\par 
\par 
\par }{\b\f1\insrsid11405443 What type of statistics does JAMon track, and how can I view them?}{\f1\fs20\insrsid11405443 
\par JAMon can be thought of as a software stopwatch that associates a label with aggregated execution times, and some other statistics. The fact that JAMon doesn't 'know' what this label represents}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  
allows JAMon to flexibly track performance of just about anything (JSPs, methods, SQL statements,}{\f1\fs20\insrsid11405443  etc}{\f1\fs20\insrsid11405443 .).  Every time the JAMon }{\i\f1\fs20\insrsid11405443 start/stop }{\f1\fs20\insrsid11405443 
methods (discussed below) are called with the same label}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  the following statistics are tracked.
\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
Aggregate performance statistics including -}{\f1\fs20\insrsid11405443  hits, average time, minimum time, and maximum time.  If our label represents a JSP  (for example: }{\i\f1\fs20\insrsid11405443 start}{\f1\fs20\insrsid11405443 
("HomePage.jsp")), then representative page statistics might be that it executed 100 times, averaged 500 milliseconds (ms.), had a minimum of 100 ms., and a maximum of 8000 ms.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 Concurrency statistics including}{
\f1\fs20\insrsid11405443  -  How many threads of execution for a label are currently running?  What was the maximum number of simultaneous threads of execution that ran?  If our label represented a}{\f1\fs20\insrsid11405443 n}{\f1\fs20\insrsid11405443 
 SQL query (for example: }{\i\f1\fs20\insrsid11405443 start}{\f1\fs20\insrsid11405443 ("select * from table where name=?")), then we could tell if this query is currently running}{\f1\fs20\insrsid11405443 . If the query is running, then we could see}{
\f1\fs20\insrsid11405443  how many are running}{\f1\fs20\insrsid11405443 . We could, furthermore, view }{\f1\fs20\insrsid11405443 the maximum number of concurrent instances of this query that ran.  
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 Date/Time information}{
\f1\fs20\insrsid11405443  -  When was the code associated with the label first executed, and when was it most recently executed?  If our label represents a method name (for example: }{\i\f1\fs20\insrsid11405443 start}{\f1\fs20\insrsid11405443 
("com.mypackage.MyClass.myMethod()")), then representative data might be that the method was first executed at '09/19/06 9:21 PM' and most recently executed at '09/22/06 9:30 AM'.
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par JAMon statistics are viewable via reports in the JAMon web application, and can also be accessed via JAMon method calls.
\par   
\par }{\b\f1\insrsid11405443 How can I incorporate JAMon into my application?}{\f1\fs20\insrsid11405443 
\par Developers can incorporate JAMon into their applications using any or all of the following approaches:
\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 Use the JAMon Servlet Filter}{
\f1\fs20\insrsid11405443  - The JAMon servlet filter automatically passes web application page names (Servlets, JSPs and more) to the JAMon start/stop methods and}{\f1\fs20\insrsid11405443 , thus,}{\f1\fs20\insrsid11405443  
allows developers to track page performance WITHOUT changing a line of application code.  All that is required is to copy a few standard lines into the applications web.xml file.  
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 Use the JAMon JDBC Driver}{
\f1\fs20\insrsid11405443  - The JAMon JDBC driver is a proxy that can monitor ANY JDBC driver (it has been tested against Sybase/MySQL/Oracle/HSQLDB and others), a}{\f1\fs20\insrsid11405443 s well as }{\f1\fs20\insrsid11405443 
 track JAMon statistics for SQL Commands, JDBC method calls, and SQL Exceptions.  It also tracks the N most recent queries executed and N most recent exceptions thrown.   Using the JAMon JDBC driver does not require ANY applicat}{\f1\fs20\insrsid11405443 
i}{\f1\fs20\insrsid11405443 on code changes.  Just replace the original driver information (driver class name, and URL) with JAMon's.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 Use JAMon Interface Monitoring}{
\f1\fs20\insrsid11405443  }{\f1\fs20\insrsid11405443 \endash }{\f1\fs20\insrsid11405443  }{\f1\fs20\insrsid11405443 As seen below, y}{\f1\fs20\insrsid11405443 
ou can monitor ANY java interface simply by passing an implementation of the interface to the JAMon }{\i\f1\fs20\insrsid11405443 monitor}{\f1\fs20\insrsid11405443  method
, and then call methods on the object as you would if the object wasn't monitored.  The class and method signature will appear as a label in the JAMon reports:
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par }\pard \ql \li720\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin720\itap0\pararsid11405443 {\f1\fs20\insrsid11405443 MyInterface myObject=(MyInterface) MonProxyFactory.monitor(new }{\f1\fs20\insrsid11405443  M}{
\f1\fs20\insrsid11405443 yImplementation());
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 \tab myObject.myMethod(); // Monitored!
\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
Finally, you can explicitly call the JAMon }{\i\f1\fs20\insrsid11405443 start/stop}{\f1\fs20\insrsid11405443  methods in the following manner.  Also, note that due to the fact that the JAMon label is simply a Java String,  dynamic/runtime data}{
\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  such as a user name}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  can easily be incorporated into the label.
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par \tab \tab import com.jamonapi.*;
\par 
\par }\pard \ql \li1440\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin1440\itap0\pararsid11405443 {\f1\fs20\insrsid11405443 // page hits by user name using runtime data
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par }\pard \ql \li720\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin720\itap0\pararsid11405443 {\f1\fs20\insrsid11405443 \tab }{\f1\fs20\insrsid11405443 Monitor mon = MonitorFactory.start("homePage.jsp-"+userName);\tab \tab 
...code that you wish to time...
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 \tab \tab mon.stop();
\par 
\par }{\b\f1\insrsid11405443 How can JAMon used to test Applications? The Details}{\b\f1\fs20\insrsid11405443 
\par }{\f1\fs20\insrsid11405443 As testers use the application, JAMon statistic
s will automatically be gathered.  When testing is done the JAMon reports can be saved and reviewed.  The JAMon data can be used in the application testing phase in the following ways:
\par 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
To ensure the application meets its performance requirements}{\f1\fs20\insrsid11405443  - The JAMon reports can be reviewed to ensure performance requirements, such as the following}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443 
 are met: 'No web page will exceed 10 seconds',  'All pages must average less than one second'. In a similar manner SQL performance requirements }{\f1\fs20\insrsid11405443 could }{\f1\fs20\insrsid11405443 be tested.  
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
To ensure the application meets its scalability requirements}{\f1\fs20\insrsid11405443  - The JAMon statistic 'Max Active' indicates the m
aximum number of concurrent threads that ran with the given label.   If there is a requirement that the application has certain performance metrics under a given load (say 100 simultaneous page requests), JAMon report can be reviewed to ensure the load te
st generated the expected load, and that the application has acceptable performance metrics under this load.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
To detect if the application has any errors or throws unwanted exceptions}{\f1\fs20\insrsid11405443  - Often testers can't tell when Exceptions occur, as often code silent
ly continues when an Exception occurs.  An example is when a caught SQL Exception is written to the log, and no other action occurs (the Exception is not re-thrown).  If the JAMon JDBC driver is used, all SQL exceptions will show up in the JAMon reports r
egardless if the exceptions are re-thrown or not.   In addition, custom JAMon labels can be created that indicate application errors have occurred. For example}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443 
 a servlet filter could call JAMon to indicate the HTTP status of a page (You could use the JAMon add method to do this:  }{\i\f1\fs20\insrsid11405443 MonitorFactory}{\f1\fs20\insrsid11405443 .}{\i\f1\fs20\insrsid11405443 add}{\f1\fs20\insrsid11405443 
("HTTP Status", "Error", httpStatusCode)).  Developers could also create a log4j appender that creates a JAMon record whenever a log4j error method is invoked that exceeds a specified severity threshold. There are
 many more examples of how programs can detect errors and create JAMon labels, thus enabling errors to be viewed in the JAMon reports.  If these steps are taken, testers can easily review the }{\f1\fs20\insrsid11405443 JAMon }{\f1\fs20\insrsid11405443 
reports to ensure no errors have occurred in the application.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
To ensure that that all parts of the application were properly tested (i.e. coverage) }{\f1\fs20\insrsid11405443 - JAMon reports can be reviewed to ensure that all pages and SQL were successfully executed during the testing phase.  
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\b\f1\fs20\insrsid11405443 
To ensure the application is properly working in production as part of post-production testing}{\f1\fs20\insrsid11405443  - Often times when an application is deployed}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  production steps are missed}{
\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443 
 and an application is missconfigured.  Testers can run the application after it has been deployed to production to ensure that it is working properly.   For example, testers could click on new functionality in a web application, ensure that no errors sho
w up in the JAMon report}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  and ensure the application meets its production performance requirements.  The production JAMon report could also be saved as part of this final testing step.
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 
\par }{\b\f1\insrsid11405443 How else can JAMon help improve applications?
\par }{\f1\fs20\insrsid11405443 
Because JAMon is part of the application, it moves with the application automatically through its life cycle of development/test (Q&A)/production.  This allows developers and testers to improve application quality by gathering statistics in each phase}{
\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  using the data to improve the next phase}{\f1\fs20\insrsid11405443 ,}{\f1\fs20\insrsid11405443  and then finally start this process again in the subsequent release.  Examples follow:
\par 
\par - }{\b\f1\fs20\insrsid11405443 Developers can use JAMon in the development phase}{\f1\fs20\insrsid11405443  similarly to the way testers use it in the testing phase (discussed abov
e).  This will ensure that many problems are caught before the formal testing phase even begins.
\par - }{\b\f1\fs20\insrsid11405443 JAMon shows its true value while running in production environments}{\f1\fs20\insrsid11405443 .  Some of the examples below show how production JAMon data can be used to improve tests,
 and also the application by helping the development team to gain a better understanding of how users interact with the application:
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
What is the application's peak usage time?  - This could be used to determine a window for application maintenance.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 W
hat is the maximum number of simultaneous users for the application? - This could be used to }{\f1\fs20\insrsid11405443 improve}{\f1\fs20\insrsid11405443  scalability testing.  There is no better load testing than your real users in action. 
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
Who are the application's "power users"? - Power users could be contacted to determine what they like and don't like about the system.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
Are certain application pages never used? - This information could be used to eliminate pages or possibly redesign them if they are not currently useful.
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
When did a specific user last login to the application?
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f1\fs20\insrsid11405443 
What are the most commonly searched product categories? - This information could be used to redesign to make searching in these categories easier.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid11405443 - }{\b\f1\fs20\insrsid11405443 JAMon can be used to help set coding priorities}{\f1\fs20\insrsid11405443 
 - Coding priorities can be based on factors such as which features are accessed the most often or what code is the slowest.
\par - }{\b\f1\fs20\insrsid11405443 To determine what is happening in an application at a snapshot in time}{\f1\fs20\insrsid11405443  - Many moni
toring tools monitor an application from the "outside looking in", but because JAMon looks at the application from the inside we can use statistics such as "Active", "First Access" and "Last Access" to determine what activities our application is performi
ng at any given time.  The ability to look 'inside' your application can be crucial when trouble shooting production problems.  Types of information that can easily be tracked include: Are database connections being closed?}{\f1\fs20\insrsid11405443 ;}{
\f1\fs20\insrsid11405443  Are exceptions being thrown?}{\f1\fs20\insrsid11405443 ;}{\f1\fs20\insrsid11405443  What SQL is currently executing?}{\f1\fs20\insrsid11405443 ;}{\f1\fs20\insrsid11405443  and much more.
\par 
\par }{\b\f1\insrsid11405443 Where can I learn more?}{\b\f1\fs20\insrsid11405443 
\par }{\f1\fs20\insrsid11405443 This was just a brief introduction of some of the ways JAMon can be used. To learn more go to http://www.jamonapi.com.  To see a live demo of JAMon and to view the JAMon statistics go to http://www.ssouza.com/jamon}{
\f1\fs20\insrsid11405443 .}{\f1\fs20\insrsid11405443 
\par 
\par 
\par }}